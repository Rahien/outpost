# Generated by Django 4.2 on 2023-05-04 18:23

from django.db import migrations

def create_perks(apps, schema_editor):
    Perk = apps.get_model('characters', 'Perk')
    Perk.objects.create(class_name="drifter", order=0, max_active=3, description="Replace one <modMinus1/> card with one <modPlus1/> card")
    Perk.objects.create(class_name="drifter", order=1, max_active=1, description="Replace one <modMinus2/> card with one <modPlus0/> card")
    Perk.objects.create(class_name="drifter", order=2, max_active=2, description="Replace one <modPlus1/> card with two <modPlus0/> \"Move one of your character tokens backward one slot\" cards")
    Perk.objects.create(class_name="drifter", order=3, max_active=1, description="Replace two <modPlus0/> cards with two <pierce/> 3 <rolling/> cards")
    Perk.objects.create(class_name="drifter", order=4, max_active=1, description="Replace two <modPlus0/> cards with two <push/> 2 <rolling/> cards")
    Perk.objects.create(class_name="drifter", order=5, max_active=1, description="Add one <modPlus3/> card")
    Perk.objects.create(class_name="drifter", order=6, max_active=2, description="Add one <modPlus2/> <immobilize/> card")
    Perk.objects.create(class_name="drifter", order=7, max_active=1, description="Add two \"<heal/>1, self\" <rolling/> cards")
    Perk.objects.create(class_name="drifter", order=8, max_active=1, description="Ignore scenario effects and add one <modPlus1/> card")
    Perk.objects.create(class_name="drifter", order=9, max_active=1, description="Ignore item <minus1ModCard/> effects and add one <modPlus1/> card")
    Perk.objects.create(class_name="drifter", order=10, max_active=2, description="Whenever you long rest you may move one of your character tokens backward one slot")
    Perk.objects.create(class_name="drifter", order=11, max_active=1, description="You may bring one additional <equipSlotSingleHand/> item into each scenario")
    Perk.objects.create(class_name="drifter", order=12, max_active=1, description="At the end of each scenario, you may discard up to two loot cards, except _Random Item_, to draw that many new loot cards")


    Perk.objects.create(class_name="deathwalker", order=0, max_active=1, description="Remove two <modMinus1/> cards")
    Perk.objects.create(class_name="deathwalker", order=1, max_active=1, description="Replace one <modMinus2/> card with one <modPlus0/> card")
    Perk.objects.create(class_name="deathwalker", order=2, max_active=3, description="Replace one <modMinus1/> card with one <modPlus1/> card")
    Perk.objects.create(class_name="deathwalker", order=3, max_active=3, description="Replace one <modPlus0/> card with one <modPlus1/> <curse/> card")
    Perk.objects.create(class_name="deathwalker", order=4, max_active=2, description="Add one <modPlus2/> <dark/> card")
    Perk.objects.create(class_name="deathwalker", order=5, max_active=2, description="Add one <rolling/> <disarm/> and one <rolling/> <muddle/> card")
    Perk.objects.create(class_name="deathwalker", order=6, max_active=2, description="Add two <rolling/> \"<heal/>1, ally\" cards")
    Perk.objects.create(class_name="deathwalker", order=7, max_active=1, description="Ignore negative scenario effects")
    Perk.objects.create(class_name="deathwalker", order=8, max_active=1, description="Whenever you long rest, you may move one <shadow/> up to 3 hexes")
    Perk.objects.create(class_name="deathwalker", order=9, max_active=1, description="While you occupy a hex with a <shadow/>, all attacks targeting you gain Disadvantage")
    Perk.objects.create(class_name="deathwalker", order=10, max_active=1, description="Whenever you short rest you may <consumeDark/> to perform \"<curse/>, <range/>2\" as if you were occupying a hex with a <shadow/>")


    Perk.objects.create(class_name="boneshaper", order=0, max_active=2, description="Replace one <modMinus1/> card with <modPlus0/> <curse/> card")
    Perk.objects.create(class_name="boneshaper", order=1, max_active=1, description="Replace one <modMinus1/> card with one <modPlus0/> <poison/> card")
    Perk.objects.create(class_name="boneshaper", order=2, max_active=1, description="Replace one <modMinus2/> card with one <modPlus0/>")
    Perk.objects.create(class_name="boneshaper", order=3, max_active=3, description="Replace one <modPlus0/> card with one <modPlus1/> \"Kill the attacking summon to instead add <modPlus4/>\" card")
    Perk.objects.create(class_name="boneshaper", order=4, max_active=2, description="Add three <rolling/> \"<heal/>1, <target/><boneshaper/>\" cards")
    Perk.objects.create(class_name="boneshaper", order=5, max_active=3, description="Add one <modPlus2/> <earth/>/<dark/> card")
    Perk.objects.create(class_name="boneshaper", order=6, max_active=1, description="Ignore negative scenario effects and add two <modPlus1/> cards")
    Perk.objects.create(class_name="boneshaper", order=7, max_active=1, description="Immediately before each of your rests, you may kill one of your summons to perform \"<bless/>, self\"")
    Perk.objects.create(class_name="boneshaper", order=8, max_active=1, description="Once per scenario, when any character ally would become exhausted by suffering <damage/>, you may suffer 2 <damage/> to reduce their hit point value to 1 instead")
    Perk.objects.create(class_name="boneshaper", order=9, max_active=2, description="At the start of each scenario, you may play a level 1 card from your hand to perform a summon action of the card")

    Perk.objects.create(class_name="geminate", order=0, max_active=1, description="Replace one <modMinus2/> card with one <modPlus0/> card")
    Perk.objects.create(class_name="geminate", order=1, max_active=3, description="Replace one <modMinus1/> card with one <modPlus0/> \"<consumeAny/><any/>\" card")
    Perk.objects.create(class_name="geminate", order=2, max_active=2, description="Replace one <modPlus0/> card with one <modPlus1/> <poison/> card")
    Perk.objects.create(class_name="geminate", order=3, max_active=2, description="Replace one <modPlus0/> card with one <modPlus1/> <wound/> card")
    Perk.objects.create(class_name="geminate", order=4, max_active=1, description="Replace one <modPlus0/> card with two <rolling/> <pierce/> cards")
    Perk.objects.create(class_name="geminate", order=5, max_active=1, description="Add two <modPlus1/> <push/> cards")
    Perk.objects.create(class_name="geminate", order=6, max_active=1, description="Add one <modTimes2/> \"<brittle/>, self\" card")
    Perk.objects.create(class_name="geminate", order=7, max_active=2, description="Add one <rolling/> <modPlus1/> \"<regenerate/>, self\" card")
    Perk.objects.create(class_name="geminate", order=8, max_active=1, description="Ignore negative scenario effects")
    Perk.objects.create(class_name="geminate", order=9, max_active=1, description="Whenever you short rest, you may remove one negative condition from one ally within <range/> 3")
    Perk.objects.create(class_name="geminate", order=10, max_active=1, description="Once each scenario, when you give yourself a negative condition, prevent the condition")
    Perk.objects.create(class_name="geminate", order=11, max_active=2, description="Whenever you perform an action with a lost icon, you may discard one card to <recoverCard/> one discard")

    Perk.objects.create(class_name="blinkblade", order=0, max_active=1, description="Remove one <modMinus2/> card")
    Perk.objects.create(class_name="blinkblade", order=1, max_active=2, description="Replace one <modMinus1/> card with one <modPlus1/> card")
    Perk.objects.create(class_name="blinkblade", order=2, max_active=2, description="Replace one <modMinus1/> card with one <modPlus0/> <wound/> card")
    Perk.objects.create(class_name="blinkblade", order=3, max_active=2, description="Replace one <modPlus0/> card with one <modPlus1/> <immobilize/> card")
    Perk.objects.create(class_name="blinkblade", order=4, max_active=3, description="Replace one <modPlus0/> card with one <rolling/> \"Place this card in your active area. On your next attack, discard this card to add +2 <attack/>\" card")
    Perk.objects.create(class_name="blinkblade", order=5, max_active=1, description="Replace two <modPlus1/> cards with two <modPlus2/> cards")
    Perk.objects.create(class_name="blinkblade", order=6, max_active=2, description="Add one <modMinus1/> \"Gain one <time/>\" card")
    Perk.objects.create(class_name="blinkblade", order=7, max_active=2, description="Add one <rolling/> <modPlus2/>\" <regenerate/>, self\" card")
    Perk.objects.create(class_name="blinkblade", order=8, max_active=1, description="Whenever you short rest, you may spend one item for no effect to <recoverCard/> a different spend item")
    Perk.objects.create(class_name="blinkblade", order=9, max_active=1, description="At the start of your first turn each scenario, you may perform \"<move/>3")
    Perk.objects.create(class_name="blinkblade", order=10, max_active=1, description="When you gain <immobilize/>, prevent the condition")

    Perk.objects.create(class_name="bannerspear", order=0, max_active=3, description="Replace one <modMinus1/> card with one <rolling/> \"<shield/> 1\" card")
    Perk.objects.create(class_name="bannerspear", order=1, max_active=2, description="Replace one <modPlus0/> card with one <modPlus0/> \"Add +1<attack/> for each ally adjacent to the target\" card")
    Perk.objects.create(class_name="bannerspear", order=2, max_active=2, description="Add one <modPlus1/> <regenerate/> card")
    Perk.objects.create(class_name="bannerspear", order=3, max_active=2, description="Add one <modPlus2/> <push/> 1 card")
    Perk.objects.create(class_name="bannerspear", order=4, max_active=2, description="Add two <rolling/> <modPlus1/> cards")
    Perk.objects.create(class_name="bannerspear", order=5, max_active=2, description="Add two <rolling/> \"<heal/> 1, self\" cards")
    Perk.objects.create(class_name="bannerspear", order=6, max_active=1, description="Ignore negative item effects and remove one <modMinus1/> card")
    Perk.objects.create(class_name="bannerspear", order=7, max_active=1, description="At the end of each of your long rests, one ally withing <range/> 3 may perform \"<move/> 2\" with you controlling the move abilities of any summons")
    Perk.objects.create(class_name="bannerspear", order=8, max_active=1, description="Whenever you open a door with a move ability, add +3 <move/>")
    Perk.objects.create(class_name="bannerspear", order=9, max_active=2, description="Once each scenario, during your turn, gain <shield/> 2 for the remainder of the round")

def remove_perks(apps, schema_editor):
    Perk = apps.get_model('characters', 'Perk')
    Perk.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('characters', '0007_alter_perk_max_active'),
    ]

    operations = [
        migrations.RunPython(create_perks, remove_perks),
    ]
